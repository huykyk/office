/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DrawingBoard.java
 *
 * Created on 2011-1-14, 14:31:36
 */

package painter2;

import java.awt.Color;
import java.awt.Graphics;
import java.io.Serializable;
import java.util.ArrayList;
import painter2.shapes.IShape;

/**
 *
 * @author student
 */
public class DrawingBoard extends javax.swing.JPanel implements Serializable {

    /** Creates new form DrawingBoard */
    public DrawingBoard() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void paintComponent(Graphics g){
        g.setColor(Color.white);
        g.fillRect(0, 0, this.getWidth(), this.getHeight());

        
        
        for(int i=0;i<shapes.size();i++){
            shapes.get(i).draw(g);
        }
        if(currentShape!=null){
            currentShape.draw(g);
        }
    }

    public ArrayList<IShape> shapes = new ArrayList<IShape>();

    private IShape currentShape = null;

    public void setCurrentShapePara(int x, int y){
        currentShape.setCurrentPara(x, y);
    }


     public void setCurrentShape(IShape currentShape, int x, int y) {
        this.currentShape = currentShape;
        this.currentShape.setInitPara(x, y);

    }

    public void finishDrawingCurrentShape() {
        if(this.currentShape!=null){
            shapes.add(currentShape);
            currentShape = null;
        }
    }

    public void undo() {
        if(this.shapes.size()>0){
            this.shapes.remove(this.shapes.size()-1);
            this.repaint();
        }
    }

   

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
